# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  checks: write
  # required for all workflows
  security-events: write
  # only required for workflows in private repositories
  actions: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build
      run: ./gradlew bootJar
    - name: Run detekt
      run: ./gradlew detekt
    - name: Publish detekt summary
      run: cat build/reports/detekt/detekt.md >> $GITHUB_STEP_SUMMARY
    - name: Upload SARIF to GitHub using the upload-sarif action
      uses: github/codeql-action/upload-sarif@v2
      if: success() || failure()
      with:
        sarif_file: build/reports/detekt/detekt.sarif
    - name: Unit test
      run: ./gradlew test
    - name: Publish Test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          build/test-results/test/*.xml
    - name: Integration test
      run: ./gradlew testIntegration
    - name: Publish Integration test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          build/test-results/testIntegration/*.xml
    - name: Architecture test
      run: ./gradlew testArchitecture
    - name: Publish Architecture test
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          build/test-results/testArchitecture/*.xml
    - name: Run Coverage
      run: ./gradlew jacocoFullReport
    - name: JaCoCo Code Coverage Report
      id: jacoco_reporter
      uses: PavanMudigonda/jacoco-reporter@v4.8
      with:
        coverage_results_path: build/reports/jacoco/jacocoFullReport/jacocoFullReport.xml
        coverage_report_name: Coverage
        coverage_report_title: JaCoCo
        github_token: ${{ secrets.GITHUB_TOKEN }}
        skip_check_run: false
        minimum_coverage: 80
        fail_below_threshold: false
        publish_only_summary: false

      # Publish Coverage Job Summary  # Optional
    - name: Add Coverage Job Summary
      run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.md artifact  # Optional
    - name: ls
      run: find . -name coverage-results.md
    - name: Upload Code Coverage Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report-markdown
        path: "*/coverage-results.md"
        retention-days: 1
